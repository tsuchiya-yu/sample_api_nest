type UserSns {
  id: Int!
  userId: Int!
  createdAt: String!
  updatedAt: String!
  x: String
  facebook: String
  instagram: String
}

input UserSnsCreateInput {
  user: UserCreateNestedOneWithoutUserSnsInput!
  x: String
  facebook: String
  instagram: String
}

input UpdateUserSnsInput {
  x: String
  facebook: String
  instagram: String
}

type Query {
  userSns(id: Int!): UserSns
  userSnsList: [UserSns!]
}

type Mutation {
  createUserSns(data: UserSnsCreateInput!): UserSns!
  updateUserSns(id: Int!, data: UpdateUserSnsInput!): UserSns!
}

input UserCreateNestedOneWithoutUserSnsInput {
  connect: UserWhereUniqueInput
}

input UserWhereUniqueInput {
  email: String
}
